buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-contacts-plugin:3.0.1'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:5.1.4'
        classpath 'com.netflix.nebula:nebula-release-plugin:6.0.2'
        classpath 'com.netflix.nebula:gradle-info-plugin:3.+'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'ch.raffael.markdown-doclet:markdown-doclet:1.4'
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
    }
}

apply plugin: "org.sonarqube"
apply plugin: 'nebula.release'
apply plugin: 'com.jfrog.bintray'


allprojects {
    apply plugin: 'license'
    group 'com.blackbuild.multicli'

    repositories {
        jcenter()
    }
}

subprojects {
    apply plugin: 'groovy'
    apply plugin: 'java-library'
    apply plugin: 'jacoco'
    apply plugin: 'ch.raffael.markdown-doclet'
    apply plugin: 'nebula.maven-publish'
    apply plugin: 'nebula.info'
    apply plugin: 'nebula.javadoc-jar'
    apply plugin: 'nebula.source-jar'
    apply plugin: 'nebula.contacts'
    apply plugin: 'com.jfrog.bintray'

    bintray {
        user = findProperty('bintrayUser')
        key = findProperty('bintrayApiKey')

        dryRun = false
        publish = true
        pkg {
            repo = 'multi-cli'
            userOrg = 'blackbuild'
            name = rootProject.name
            publications = ['nebula']
            version {
                gpg {
                    sign = true
                    passphrase = findProperty("signing.password")
                }
                mavenCentralSync {
                    sync = false // !version.toString().contains(".dev+")
                    user = findProperty("nexusUsername")
                    password = findProperty("nexusPassword")
                }
            }
        }
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    dependencies {
        testCompile('org.spockframework:spock-core:1.1-groovy-2.4')
        testCompile "org.hamcrest:hamcrest-core:1.3"
        testRuntime "net.bytebuddy:byte-buddy:1.6.5"
        testRuntime "org.objenesis:objenesis:2.5.1"
    }
}

model {
    tasks.release {
        dependsOn 'bintrayUpload'
    }
}